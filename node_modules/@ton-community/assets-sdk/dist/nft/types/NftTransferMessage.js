"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadNftTransferMessage = exports.storeNftTransferMessage = void 0;
const opcodes_1 = require("../opcodes");
function storeNftTransferMessage(message) {
    return (builder) => {
        const { queryId, newOwner, responseDestination, customPayload, forwardAmount, forwardPayload } = message;
        builder.storeUint(opcodes_1.NFT_TRANSFER_OPCODE, 32)
            .storeUint(queryId, 64)
            .storeAddress(newOwner)
            .storeAddress(responseDestination)
            .storeMaybeRef(customPayload)
            .storeCoins(forwardAmount)
            .storeMaybeRef(forwardPayload);
    };
}
exports.storeNftTransferMessage = storeNftTransferMessage;
function loadNftTransferMessage(slice) {
    if (slice.loadUint(32) !== opcodes_1.NFT_TRANSFER_OPCODE) {
        throw new Error('Wrong opcode');
    }
    const queryId = slice.loadUintBig(64);
    const newOwner = slice.loadAddress();
    const responseDestination = slice.loadMaybeAddress();
    const customPayload = slice.loadMaybeRef();
    const forwardAmount = slice.loadCoins();
    const eitherPayload = slice.loadBoolean();
    const forwardPayload = eitherPayload ? slice.loadRef() : slice.asCell();
    return {
        queryId,
        newOwner,
        responseDestination,
        customPayload,
        forwardAmount,
        forwardPayload,
    };
}
exports.loadNftTransferMessage = loadNftTransferMessage;
