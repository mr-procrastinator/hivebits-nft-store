"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadNftMintMessage = exports.storeNftMintMessage = void 0;
const core_1 = require("@ton/core");
const opcodes_1 = require("../opcodes");
function storeNftMintMessage(src, storeParams) {
    return (builder) => {
        builder.storeUint(opcodes_1.NFT_MINT_OPCODE, 32);
        builder.storeUint(src.queryId, 64);
        builder.storeUint(src.itemIndex, 64);
        builder.storeCoins(src.value);
        builder.storeRef((0, core_1.beginCell)().store(storeParams(src.itemParams)).endCell());
    };
}
exports.storeNftMintMessage = storeNftMintMessage;
function loadNftMintMessage(slice, loadParams) {
    if (slice.loadUint(32) !== opcodes_1.NFT_MINT_OPCODE) {
        throw new Error('Wrong opcode');
    }
    const queryId = slice.loadUintBig(64);
    const itemIndex = slice.loadUintBig(64);
    const value = slice.loadCoins();
    const itemParams = slice.loadRef();
    return {
        itemIndex,
        value,
        itemParams: loadParams(itemParams.beginParse()),
        queryId,
    };
}
exports.loadNftMintMessage = loadNftMintMessage;
