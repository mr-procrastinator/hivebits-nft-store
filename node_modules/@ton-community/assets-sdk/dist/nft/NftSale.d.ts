import { Address, Cell, Contract, ContractProvider, MessageRelaxed, Sender, SendMode, StateInit } from "@ton/core";
import { NftSaleData } from "./data";
export declare class NftSale implements Contract {
    readonly address: Address;
    readonly init?: StateInit | undefined;
    static code: Cell;
    constructor(address: Address, init?: StateInit | undefined);
    static createFromConfig(params: {
        createdAt: number;
        marketplace: Address | null;
        nft: Address;
        fullPrice: bigint;
        marketplaceFeeTo: Address | null;
        marketplaceFee: bigint;
        royaltyTo: Address | null;
        royalty: bigint;
        canDeployByExternal: boolean;
    }, code?: Cell, workchain?: number): NftSale;
    static createFromAddress(address: Address): NftSale;
    sendDeploy(provider: ContractProvider, sender: Sender, value?: bigint): Promise<void>;
    sendDeployExternal(provider: ContractProvider): Promise<void>;
    sendTopup(provider: ContractProvider, sender: Sender, options?: {
        value?: bigint;
        queryId?: bigint;
    }): Promise<void>;
    sendAdminMessage(provider: ContractProvider, sender: Sender, params: {
        message: MessageRelaxed | Cell;
        sendMode: SendMode;
    }, value?: bigint, queryId?: bigint): Promise<void>;
    sendCancel(provider: ContractProvider, sender: Sender, options?: {
        value?: bigint;
        queryId?: bigint;
    }): Promise<void>;
    sendBuy(provider: ContractProvider, sender: Sender, options?: {
        value?: bigint;
        queryId?: bigint;
    }): Promise<void>;
    getData(provider: ContractProvider): Promise<NftSaleData>;
}
