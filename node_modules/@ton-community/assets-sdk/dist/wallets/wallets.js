"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSender = exports.createWallet = exports.createHighloadV2 = void 0;
const HighloadWalletContractV2_1 = require("./HighloadWalletContractV2");
const ton_client_api_1 = require("../client/ton-client-api");
const WORKCHAIN = 0;
function createHighloadV2(publicKey) {
    return HighloadWalletContractV2_1.HighloadWalletContractV2.create({ workchain: WORKCHAIN, publicKey: publicKey });
}
exports.createHighloadV2 = createHighloadV2;
function createWallet(walletType, publicKey) {
    switch (walletType) {
        case 'highload-v2':
            return createHighloadV2(publicKey);
        default:
            throw new Error('Unsupported wallet type');
    }
}
exports.createWallet = createWallet;
async function createSender(walletType, keypair, clientOrNetwork) {
    const isNetwork = clientOrNetwork === 'testnet' || clientOrNetwork === 'mainnet';
    const client = isNetwork ? await (0, ton_client_api_1.createApi)(clientOrNetwork) : clientOrNetwork;
    const wallet = createWallet(walletType, keypair.publicKey);
    return client.open(wallet).sender(keypair.secretKey);
}
exports.createSender = createSender;
