/// <reference types="node" />
import { Builder, Slice } from "@ton/core";
import { SetKind, UnknownMessage } from "../types";
export declare const TEXT_OPCODE = 0;
export declare const ENCRYPTED_MESSAGE_OPCODE = 560454219;
export type SimpleTransferMessage = {};
export type TextMessage = {
    text: string;
};
export type EncryptedMessage = {
    data: Buffer;
};
export declare function storeSimpleTransferMessage(value: SimpleTransferMessage): (builder: Builder) => void;
export declare function loadSimpleTransferMessage(slice: Slice): SimpleTransferMessage;
export declare function storeTextMessage(value: TextMessage): (builder: Builder) => void;
export declare function loadTextMessage(slice: Slice): TextMessage;
export declare function storeEncryptedMessage(value: EncryptedMessage): (builder: Builder) => void;
export declare function loadEncryptedMessage(slice: Slice): EncryptedMessage;
export type TransferMessage = SetKind<SimpleTransferMessage, 'simple_transfer'> | SetKind<TextMessage, 'text_message'> | SetKind<EncryptedMessage, 'encrypted_message'> | SetKind<UnknownMessage, 'unknown'>;
export declare function loadTransferMessage(slice: Slice): TransferMessage;
