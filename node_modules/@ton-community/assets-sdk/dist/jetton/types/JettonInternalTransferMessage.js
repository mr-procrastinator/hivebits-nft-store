"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadJettonInternalTransferMessage = exports.storeJettonInternalTransferMessage = void 0;
const opcodes_1 = require("../opcodes");
function storeJettonInternalTransferMessage(src) {
    return (builder) => {
        builder.storeUint(opcodes_1.JETTON_INTERNAL_TRANSFER_OPCODE, 32);
        builder.storeUint(src.queryId, 64);
        builder.storeCoins(src.amount);
        builder.storeAddress(src.from);
        builder.storeAddress(src.responseAddress);
        builder.storeCoins(src.forwardTonAmount);
        builder.storeMaybeRef(src.forwardPayload);
    };
}
exports.storeJettonInternalTransferMessage = storeJettonInternalTransferMessage;
function loadJettonInternalTransferMessage(slice) {
    if (slice.loadUint(32) !== opcodes_1.JETTON_INTERNAL_TRANSFER_OPCODE) {
        throw new Error('Wrong opcode');
    }
    const queryId = slice.loadUintBig(64);
    const amount = slice.loadCoins();
    const from = slice.loadAddress();
    const responseAddress = slice.loadAddress();
    const forwardTonAmount = slice.loadCoins();
    const eitherPayload = slice.loadBoolean();
    const forwardPayload = eitherPayload ? slice.loadRef() : slice.asCell();
    return {
        queryId,
        amount,
        from,
        responseAddress,
        forwardTonAmount,
        forwardPayload,
    };
}
exports.loadJettonInternalTransferMessage = loadJettonInternalTransferMessage;
