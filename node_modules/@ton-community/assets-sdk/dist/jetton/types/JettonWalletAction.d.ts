import { UnknownAction } from "../../common/types";
import { Address, Cell, Transaction } from "@ton/core";
import { TransferAction } from "../../common/types/TransferAction";
export type JettonWalletTransferAction = {
    kind: 'jetton_transfer';
    queryId: bigint;
    from: Address;
    to: Address;
    amount: bigint;
    responseAddress: Address | null;
    forwardTonAmount: bigint;
    forwardPayload: Cell | null;
    transaction: Transaction;
};
export type JettonWalletTransferFailedAction = {
    kind: 'jetton_transfer_failed';
    queryId: bigint;
    amount: bigint;
    transaction: Transaction;
};
export type JettonWalletTransferReceivedAction = {
    kind: 'jetton_transfer_received';
    queryId: bigint;
    amount: bigint;
    from: Address;
    transaction: Transaction;
};
export type JettonWalletBurnAction = {
    kind: 'jetton_burn';
    queryId: bigint;
    amount: bigint;
    transaction: Transaction;
};
export type JettonWalletBurnFailedAction = {
    kind: 'jetton_burn_failed';
    queryId: bigint;
    amount: bigint;
    transaction: Transaction;
};
export type JettonWalletAction = JettonWalletTransferAction | JettonWalletTransferFailedAction | JettonWalletTransferReceivedAction | JettonWalletBurnAction | JettonWalletBurnFailedAction | TransferAction | UnknownAction;
export declare function parseJettonWalletTransaction(tx: Transaction): JettonWalletAction;
