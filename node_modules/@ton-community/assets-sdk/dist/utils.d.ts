import { Cell } from "@ton/core";
export declare function sleep(timeout: number): Promise<void>;
export declare function internalOnchainContentToCell(internal: Record<string, string | number | undefined>): Cell;
export type Deferred<T, P extends unknown[] = []> = (...args: P) => Promise<T>;
export type DeferredFactory<T, P extends unknown[] = []> = (...args: P) => Promise<T>;
export declare function defer<T, P extends unknown[] = []>(factory: DeferredFactory<T, P>): Deferred<T, P>;
export type PartialBy<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>;
