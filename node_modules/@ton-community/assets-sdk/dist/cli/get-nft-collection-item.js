"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.main = void 0;
const common_1 = require("./common");
const core_1 = require("@ton/core");
const inquirer_1 = __importDefault(require("inquirer"));
async function promptForUserInput() {
    const { collection, index } = await inquirer_1.default.prompt([{
            name: 'collection',
            message: 'Enter collection address',
        }, {
            name: 'index',
            message: 'Enter item index',
        }]);
    return {
        collectionAddress: core_1.Address.parse(collection),
        index: BigInt(index),
    };
}
async function main() {
    const { sdk, network } = await (0, common_1.createEnv)();
    const { collectionAddress, index } = await promptForUserInput();
    const collection = sdk.openNftCollection(collectionAddress);
    const { nextItemIndex } = await collection.getData();
    if (index >= nextItemIndex) {
        throw new Error(`item with index ${index} does not exist in collection`);
    }
    const item = await collection.getItem(index);
    const itemData = await item.getData();
    const itemContent = await item.getContent();
    const itemInfo = {
        name: itemContent.name,
        description: itemContent.description,
        image: itemContent.image?.toString('base64'),
        owner: itemData.owner,
        collection: itemData.collection,
        index: itemData.index,
    };
    (0, common_1.printInfo)(itemInfo, network);
}
exports.main = main;
