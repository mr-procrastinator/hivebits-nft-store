"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.main = void 0;
const common_1 = require("./common");
const inquirer_1 = __importDefault(require("inquirer"));
const core_1 = require("@ton/core");
async function promptForUserInput(params) {
    const { address, recipient, amount } = await inquirer_1.default.prompt([{
            name: 'address',
            message: 'Enter jetton address'
        }, {
            name: 'recipient',
            message: 'Enter minted jetton recipient (default: your wallet address)',
            default: params.defaultRecipient,
        }, {
            name: 'amount',
            message: 'Enter amount in jetton units',
            type: 'number',
            validate: (value) => {
                const amount = BigInt(value);
                return amount > 0 ? true : 'Amount must be a positive integer';
            }
        }]);
    return {
        address: core_1.Address.parse(address),
        recipient: core_1.Address.parse(recipient),
        amount: BigInt(amount),
    };
}
async function main() {
    const { sdk, network, sender } = await (0, common_1.createEnv)();
    const { address, recipient, amount } = await promptForUserInput({
        defaultRecipient: (0, common_1.formatAddress)(sender.address, network)
    });
    const jetton = sdk.openJetton(address);
    await jetton.sendMint(sender, recipient, amount);
    const jettonMintInfo = {
        name: 'Minted Jetton',
        'minted jetton': jetton.address,
        'recipient': recipient,
        'amount': amount,
    };
    (0, common_1.printInfo)(jettonMintInfo, network);
}
exports.main = main;
