"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.main = void 0;
const core_1 = require("@ton/core");
const common_1 = require("./common");
const inquirer_1 = __importDefault(require("inquirer"));
async function promptJettonTransfer() {
    const { address, recipient, amount } = await inquirer_1.default.prompt([{
            name: 'address',
            message: 'Enter jetton address',
        }, {
            name: 'recipient',
            message: 'Enter recipient address',
        }, {
            name: 'amount',
            type: 'number',
            message: 'Enter amount in jetton units',
            validate: (input) => {
                const amount = BigInt(input);
                return amount > 0 ? true : 'Amount must be a positive integer';
            },
        }]);
    return {
        address: core_1.Address.parse(address),
        recipient: core_1.Address.parse(recipient),
        amount: BigInt(amount),
    };
}
async function main() {
    const { sdk, network, sender } = await (0, common_1.createEnv)();
    const { address, recipient, amount } = await promptJettonTransfer();
    const jetton = sdk.openJetton(address);
    const senderAddress = sdk.sender?.address;
    if (senderAddress === undefined) {
        throw new Error('Cannot open jetton wallet: sender address is unknown');
    }
    const jettonWallet = await jetton.getWallet(senderAddress);
    await jettonWallet.send(sender, recipient, amount);
    const jettonTransferInfo = {
        name: 'Transfer jetton',
        jetton: jetton.address,
        'jetton wallet': jettonWallet.address,
        recipient: recipient,
        amount: amount,
    };
    (0, common_1.printInfo)(jettonTransferInfo, network);
}
exports.main = main;
